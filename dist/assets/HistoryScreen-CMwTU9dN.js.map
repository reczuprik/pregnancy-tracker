{"version":3,"file":"HistoryScreen-CMwTU9dN.js","sources":["../../src/components/history/AccordionMeasurementCard.tsx","../../src/screens/HistoryScreen.tsx"],"sourcesContent":["// src/components/history/AccordionMeasurementCard.tsx (FINAL Polished Version)\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Measurement, CalculationResult } from '../../types/measurement'; // Assuming you might need CalculationResult for percentile logic\r\nimport { calculateMeasurement } from '../../services/calculations'; // For getting percentiles\r\nimport { differenceInDays } from 'date-fns'; \r\n\r\nconst HeartIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" width=\"18\" height=\"18\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\" /></svg>;\r\nconst TrashIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" width=\"18\" height=\"18\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.134-2.033-2.134H8.71c-1.123 0-2.033.954-2.033 2.134v.916m7.5 0a48.667 48.667 0 00-7.5 0\" /></svg>;\r\nconst ChevronIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2.5} stroke=\"currentColor\" width=\"18\" height=\"18\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" /></svg>;\r\nconst roundPercentile = (p: number) => Math.round(p / 5) * 5;\r\n\r\ninterface AccordionMeasurementCardProps {\r\n  measurement: Measurement;\r\n  isExpanded: boolean;\r\n  officialMeasurement?: Measurement; // Now accepts this for comparison\r\n  onClick: () => void;\r\n  onSetOfficial: (e: React.MouseEvent, id: string) => void;\r\n  onDelete: (e: React.MouseEvent, id: string) => void;\r\n}\r\n\r\nconst AccordionMeasurementCard: React.FC<AccordionMeasurementCardProps> = ({ measurement, isExpanded, officialMeasurement, onClick, onSetOfficial, onDelete }) => {\r\n  const { t } = useTranslation();\r\n  const { date, gestationalWeek, gestationalDay, measurements, isOfficial, id } = measurement;\r\n  \r\n  // Perform calculation to get percentile data for this card\r\n  const calculation = calculateMeasurement({ date, ...measurements });\r\n    // --- ✨ FINAL, CORRECT Re-Dating Logic for Display ---\r\n  let displayWeek = measurement.gestationalWeek;\r\n  let displayDay = measurement.gestationalDay;\r\n  if (officialMeasurement) {\r\n    const officialAgeInDays = (officialMeasurement.gestationalWeek * 7) + officialMeasurement.gestationalDay;\r\n    const dateOfOfficialScan = new Date(officialMeasurement.date);\r\n    const dateOfCurrentScan = new Date(measurement.date);\r\n    const dayDifference = differenceInDays(dateOfCurrentScan, dateOfOfficialScan);\r\n    const reDatedGestationalAgeInDays = officialAgeInDays + dayDifference;\r\n    displayWeek = Math.floor(reDatedGestationalAgeInDays / 7);\r\n    displayDay = reDatedGestationalAgeInDays % 7;\r\n  }\r\n\r\n  const handleActionClick = (e: React.MouseEvent, handler: (e: React.MouseEvent, id: string) => void) => {\r\n    e.stopPropagation();\r\n    handler(e, id);\r\n  };\r\n  return (\r\n    <div className={`accordion-measurement-card ${isExpanded ? 'expanded' : ''} ${isOfficial === 1 ? 'official' : ''}`} onClick={onClick}>\r\n      <div className=\"card-header-collapsed\">\r\n        <div className=\"collapsed-info\">\r\n          <div className=\"card-title\">{date}</div>\r\n        </div>\r\n        <div className=\"collapsed-age\">\r\n          {/* ✨ FIX: ALWAYS displays the \"true\" (re-dated) age. No more confusing labels. */}\r\n          <div className=\"age-value\">{`${displayWeek}${t('results.weeks')} ${displayDay}${t('results.days')}`}</div>\r\n        </div>\r\n        <div className=\"chevron-container\"><ChevronIcon /></div>\r\n      </div>\r\n\r\n      <div className=\"card-details-wrapper\">\r\n        <div className=\"card-details-content\">\r\n          <div className=\"details-section\">\r\n            <div className=\"details-section-title\">{t('history.measurementDataTitle')}</div>\r\n            <div className=\"card-body\">\r\n    \r\n              {Object.entries(measurements).map(([key, value]) => {\r\n                // Only render the item if it has a valid value\r\n                if (value == null) return null;\r\n                \r\n                return (\r\n                  <div className=\"measurement-item\" key={key}>\r\n                    <span>{t(`measurement.form.${key.replace('_mm', '')}`)}</span>\r\n                    <span>{value}mm</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            \r\n            </div>\r\n          </div>\r\n          \r\n          {calculation?.percentiles && calculation.percentiles.length > 0 && (\r\n            <div className=\"details-section\">\r\n              <div className=\"details-section-title\">{t('history.growthAnalysisTitle')}</div>\r\n              <div className=\"card-body\">\r\n                {calculation.percentiles.map(p => (\r\n                  <div className=\"measurement-item\" key={p.parameter}>\r\n                    {/* ✨ FIX: Using a simpler, correct translation key */}\r\n                    <span>{t('history.growthRateLabel', { parameter: p.parameter })}</span>\r\n                    <span className=\"reassurance-text\">\r\n                      {/* ✨ FIX: Rounding the percentile */}\r\n                      ~{roundPercentile(p.percentile)}th ({t('history.reassuranceText')})\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n                {isOfficial !== 1 && (\r\n                  <div className=\"measurement-item-deemphasized\">\r\n                    <span>{t('history.estimatedAgeFromSize')}</span>\r\n                    <span>{`${calculation.gestationalWeek}w ${calculation.gestationalDay}d`}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"card-actions\">\r\n            {isOfficial !== 1 && (\r\n              <button className=\"icon-button\" onClick={(e) => handleActionClick(e, onSetOfficial)}><HeartIcon /></button>\r\n            )}\r\n            <button className=\"icon-button danger\" onClick={(e) => handleActionClick(e, onDelete)}><TrashIcon /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"official-strip\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccordionMeasurementCard;\r\n","// src/screens/HistoryScreen.tsx (FINAL Rebuilt Version)\r\n\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport { Measurement } from '../types/measurement';\r\nimport { MeasurementService } from '../services/database';\r\nimport AccordionMeasurementCard from '../components/history/AccordionMeasurementCard';\r\n\r\ninterface HistoryScreenProps {\r\n  measurements: Measurement[];\r\n  \r\n  officialMeasurement?: Measurement;\r\n  onMeasurementsChange: () => void;\r\n}\r\n\r\n\r\nconst HistoryScreen: React.FC<HistoryScreenProps> = ({ measurements, officialMeasurement,onMeasurementsChange }) => {\r\n  const { t } = useTranslation();\r\n  const [expandedCardId, setExpandedCardId] = useState<string | null>(null);\r\n\r\n  // NOTE: State for modals and charts is removed, simplifying the component.\r\n\r\n  const handleDelete = async (e: React.MouseEvent, id: string) => {\r\n    // This handler is now passed down to each card\r\n    e.stopPropagation();\r\n    if (window.confirm(t('history.confirmDelete'))) {\r\n      await MeasurementService.deleteMeasurement(id);\r\n      onMeasurementsChange();\r\n    }\r\n  };\r\n\r\n  const handleSetOfficial = async (e: React.MouseEvent, id: string) => {\r\n    // This handler is also passed down\r\n    e.stopPropagation();\r\n    await MeasurementService.setOfficialMeasurement(id);\r\n    onMeasurementsChange();\r\n  };\r\n  \r\n  // ✨ NEW: Click handler that manages which card is open\r\n  const handleCardClick = (cardId: string) => {\r\n    setExpandedCardId(prevId => (prevId === cardId ? null : cardId)); // Toggle or switch\r\n  };\r\n  if (measurements.length === 0) {\r\n    // The empty state remains the same, but we will add an illustration later in Phase 3\r\n    return (\r\n      <div className=\"history-view-container\">\r\n        <p className=\"no-data-message\">{t('history.noData')}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n   return (\r\n    <div className=\"history-view-container\">\r\n      <div className=\"btn-group\">\r\n        <Link to=\"/journey\" className=\"btn btn-secondary btn-full\">\r\n          {t('history.actions.chart')}\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"timeline-container\">\r\n        {measurements.map((m) => (\r\n          <AccordionMeasurementCard\r\n            key={m.id}\r\n            measurement={m}\r\n            // ✨ NEW: Pass the official measurement down for comparison\r\n            officialMeasurement={officialMeasurement || undefined}\r\n            isExpanded={expandedCardId === m.id}\r\n            onClick={() => handleCardClick(m.id)}\r\n            onSetOfficial={handleSetOfficial}\r\n            onDelete={handleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryScreen;"],"names":["HeartIcon","jsx","TrashIcon","ChevronIcon","roundPercentile","p","AccordionMeasurementCard","measurement","isExpanded","officialMeasurement","onClick","onSetOfficial","onDelete","useTranslation","date","gestationalWeek","gestationalDay","measurements","isOfficial","id","calculation","calculateMeasurement","displayWeek","displayDay","officialAgeInDays","dateOfOfficialScan","dateOfCurrentScan","dayDifference","differenceInDays","reDatedGestationalAgeInDays","handleActionClick","e","handler","jsxs","key","value","HistoryScreen","onMeasurementsChange","t","expandedCardId","setExpandedCardId","useState","handleDelete","MeasurementService","handleSetOfficial","handleCardClick","cardId","prevId","Link","m"],"mappings":"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"}