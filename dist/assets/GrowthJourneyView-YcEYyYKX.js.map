{"version":3,"file":"GrowthJourneyView-YcEYyYKX.js","sources":["../../src/components/history/GrowthChart.tsx","../../src/components/history/GrowthJourneyView.tsx"],"sourcesContent":["\r\n// src/components/history/GrowthChart.tsx - OPTIMIZED VERSION\r\nimport React, { useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { differenceInDays } from 'date-fns';\r\nimport {\r\n  Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler,\r\n} from 'chart.js';\r\nimport { CRL_PERCENTILES, FL_PERCENTILES, BPD_PERCENTILES, HC_PERCENTILES,AC_PERCENTILES  } from '../../services/calculations';\r\nimport { Measurement } from '../../types/measurement';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\r\nconst getOrCreateTooltip = (chart: any) => {\r\n  let tooltipEl = chart.canvas.parentNode.querySelector('div');\r\n\r\n  if (!tooltipEl) {\r\n    tooltipEl = document.createElement('div');\r\n    tooltipEl.className = 'chart-tooltip-container'; // ✨ Use our CSS class\r\n\r\n    const tooltipBody = document.createElement('div');\r\n    tooltipBody.className = 'chart-tooltip'; // ✨ Use our CSS class\r\n    \r\n    tooltipEl.appendChild(tooltipBody);\r\n    chart.canvas.parentNode.appendChild(tooltipEl);\r\n  }\r\n\r\n  return tooltipEl;\r\n};\r\n\r\ntype ChartableParameter = 'crl_mm' | 'fl_mm' | 'bpd_mm' | 'hc_mm' | 'ac_mm';\r\n\r\ninterface GrowthChartProps {\r\n  measurements: Measurement[];\r\n  parameter: ChartableParameter;\r\n  officialMeasurement?: Measurement;\r\n}\r\nconst getCssVar = (name: string) =>\r\n  getComputedStyle(document.documentElement).getPropertyValue(name).trim();\r\n\r\nconst GrowthChart: React.FC<GrowthChartProps> = ({ measurements, parameter, officialMeasurement }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // ✅ PERFORMANCE: Memoize expensive calculations\r\n  const chartData = useMemo(() => {\r\n    const percentileDataMap = {\r\n      crl_mm: CRL_PERCENTILES, fl_mm: FL_PERCENTILES,\r\n      bpd_mm: BPD_PERCENTILES, hc_mm: HC_PERCENTILES,\r\n      ac_mm: AC_PERCENTILES\r\n\r\n    };\r\n    const percentileData = percentileDataMap[parameter];\r\n    if (!percentileData) return null;\r\n\r\n    // Calculate re-dated user data\r\n    const reDatedUserData = measurements.map(currentMeasurement => {\r\n      let reDatedGestationalAgeInDays;\r\n      if (officialMeasurement) {\r\n        const officialAgeInDays = (officialMeasurement.gestationalWeek * 7) + officialMeasurement.gestationalDay;\r\n        const dateOfOfficialScan = new Date(officialMeasurement.date);\r\n        const dateOfCurrentScan = new Date(currentMeasurement.date);\r\n        const dayDifference = differenceInDays(dateOfCurrentScan, dateOfOfficialScan);\r\n        reDatedGestationalAgeInDays = officialAgeInDays + dayDifference;\r\n      } else {\r\n        reDatedGestationalAgeInDays = (currentMeasurement.gestationalWeek * 7) + currentMeasurement.gestationalDay;\r\n      }\r\n\r\n      const value = currentMeasurement.measurements[parameter];\r\n      if (value == null || value <= 0) return null;\r\n\r\n      return {\r\n        x: reDatedGestationalAgeInDays / 7.0,\r\n        y: value,\r\n        isOfficial: currentMeasurement.id === officialMeasurement?.id,\r\n        measurement: currentMeasurement,\r\n      };\r\n    }).filter((p): p is NonNullable<typeof p> => p !== null);\r\n\r\n    // Generate axis range\r\n    const allAgesInWeeks = reDatedUserData.map(d => d.x);\r\n    const minWeek = Math.floor(Math.min(...allAgesInWeeks, ...Object.keys(percentileData).map(Number)));\r\n    const maxWeek = Math.ceil(Math.max(...allAgesInWeeks, ...Object.keys(percentileData).map(Number)));\r\n\r\n    // Generate percentile curves\r\n    const percentileCurve = (percentileIndex: 0 | 1 | 2) => {\r\n      const data = [];\r\n      for (let week = minWeek; week <= maxWeek; week++) {\r\n        if (percentileData[week]) {\r\n          data.push({ x: week, y: percentileData[week][percentileIndex] });\r\n        }\r\n      }\r\n      return data;\r\n    };\r\n    const accentColor = getCssVar('--color-accent-primary');\r\n    const secondaryAccentColor = getCssVar('--color-accent-secondary');\r\n    return {\r\n      datasets: [\r\n        {\r\n          label: t('charts.typicalRange'),\r\n          data: percentileCurve(0),\r\n          backgroundColor: 'rgba(178, 216, 216, 0.2)', // Healing Teal at 20% opacity\r\n          borderColor: 'transparent',\r\n          pointRadius: 0,\r\n          fill: '+1',\r\n          order: 4,\r\n        },\r\n        {\r\n          label: 'Boundary',\r\n          data: percentileCurve(2),\r\n          borderColor: 'transparent',\r\n          pointRadius: 0,\r\n          fill: false,\r\n          order: 3,\r\n        },\r\n        {\r\n          label: t('charts.medianJourney'),\r\n          data: percentileCurve(1),\r\n          borderColor: secondaryAccentColor, \r\n          borderWidth: 2,\r\n          pointRadius: 0,\r\n          fill: false,\r\n          order: 2,\r\n        },\r\n        {\r\n          label: t('charts.yourBaby'),\r\n          data: reDatedUserData,\r\n          pointRadius: reDatedUserData.map(p => p.isOfficial ? 8 : 6),\r\n          pointHoverRadius: reDatedUserData.map(p => p.isOfficial ? 10 : 8),\r\n          backgroundColor: reDatedUserData.map(p => \r\n            p.isOfficial ? secondaryAccentColor : accentColor\r\n          ),\r\n          borderColor: reDatedUserData.map(p => \r\n            p.isOfficial ? secondaryAccentColor : accentColor\r\n          ),      showLine: false,\r\n          order: 1,\r\n        }\r\n      ],\r\n      minWeek,\r\n      maxWeek\r\n    };\r\n  }, [measurements, parameter, officialMeasurement, t]);\r\n\r\n  // ✅ PERFORMANCE: Memoize chart options\r\n  const chartOptions = useMemo(() => ({\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: {\r\n        display: true,\r\n        text: t('charts.title', { parameter: parameter.replace('_mm', '').toUpperCase() }),\r\n        font: { size: 18, weight: 600 },\r\n        padding: { top: 10, bottom: 20 },\r\n      },\r\n tooltip: {\r\n        enabled: false, // We are creating our own.\r\n        external: (context: any) => {\r\n          const { chart, tooltip } = context;\r\n          const tooltipEl = getOrCreateTooltip(chart);\r\n\r\n          // Hide if no tooltip\r\n          if (tooltip.opacity === 0) {\r\n            tooltipEl.style.opacity = 0;\r\n            return;\r\n          }\r\n\r\n          // Only proceed if we are hovering over one of \"Your Baby's\" data points\r\n          if (!tooltip.dataPoints?.[0]?.raw?.measurement) {\r\n            tooltipEl.style.opacity = 0;\r\n            return;\r\n          }\r\n\r\n          // Set Text\r\n          if (tooltip.body) {\r\n            const dataPoint = tooltip.dataPoints[0];\r\n            const measurement = dataPoint.raw.measurement;\r\n            const value = dataPoint.raw.y;\r\n            const week = measurement.gestationalWeek;\r\n            const day = measurement.gestationalDay;\r\n\r\n            const tooltipBody = tooltipEl.querySelector('.chart-tooltip');\r\n            if (!tooltipBody) return;\r\n\r\n            // Use our CSS classes for styling\r\n            const innerHtml = `\r\n              <div class=\"tooltip-title\">${t('charts.tooltipIntro')}</div>\r\n              <div class=\"tooltip-body\">\r\n                <span class=\"value\">${week}${t('results.weeks')} ${day}${t('results.days')}: ${value}mm</span>\r\n                <span class=\"context\">${t('charts.tooltipGrowth')}</span>\r\n              </div>\r\n            `;\r\n            \r\n            tooltipBody.innerHTML = innerHtml;\r\n          }\r\n\r\n          const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\r\n\r\n          // Display and position\r\n          tooltipEl.style.opacity = 1;\r\n          tooltipEl.style.left = positionX + tooltip.caretX + 'px';\r\n          tooltipEl.style.top = positionY + tooltip.caretY + 'px';\r\n        },\r\n      },\r\n    \r\n    },\r\n    scales: {\r\n      x: {\r\n        type: 'linear' as const,\r\n        title: { display: true, text: t('charts.xAxisLabel') },\r\n        grid: { color: '#f8fafc' },\r\n        min: chartData?.minWeek,\r\n        max: chartData?.maxWeek,\r\n      },\r\n      y: {\r\n        title: { display: true, text: t('charts.yAxisLabel') },\r\n        grid: { color: '#f1f5f9' },\r\n        beginAtZero: true,\r\n      }\r\n    },\r\n  }), [t, parameter, chartData]);\r\n\r\n  if (!chartData) return null;\r\n\r\n  return (\r\n    <div style={{ position: 'relative', height: '400px', marginTop: '20px' }}>\r\n      <Line options={chartOptions} data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// ✅ PERFORMANCE: Memoize the component\r\nexport default React.memo(GrowthChart);","// Updated GrowthJourneyView.tsx with better grouped controls\r\n\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Measurement } from '../../types/measurement';\r\nimport GrowthChart from './GrowthChart';\r\n\r\ninterface GrowthJourneyViewProps {\r\n  measurements: Measurement[];\r\n  officialMeasurement?: Measurement;\r\n}\r\n\r\ntype ChartableParameter = 'crl_mm' | 'fl_mm' | 'bpd_mm' | 'hc_mm' | 'ac_mm';\r\n\r\nconst GrowthJourneyView: React.FC<GrowthJourneyViewProps> = ({ measurements, officialMeasurement }) => {\r\n  const { t } = useTranslation();\r\n  const [activeChart, setActiveChart] = useState<ChartableParameter>('crl_mm');\r\n\r\n  return (\r\n    <div className=\"growth-journey-view\">\r\n      <div className=\"view-header\">\r\n        <NavLink to=\"/history\" className=\"btn btn-secondary btn-full\">\r\n          &lt; {t('history.actions.hideChart')}\r\n        </NavLink>\r\n      </div>\r\n      \r\n      <div className=\"chart-analytics-area\">\r\n        <div className=\"chart-controls\">\r\n          {/* Early Pregnancy Group */}\r\n          <div className=\"measurement-group early-pregnancy\">\r\n            <span className=\"group-label\">Early Pregnancy</span>\r\n            <div className=\"group-buttons\">\r\n              <button \r\n                onClick={() => setActiveChart('crl_mm')} \r\n                className={`btn-tertiary ${activeChart === 'crl_mm' ? 'active' : ''}`}\r\n              >\r\n                CRL\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Later Pregnancy Group */}\r\n          <div className=\"measurement-group later-pregnancy\">\r\n            <span className=\"group-label\">Biometric Parameters</span>\r\n            <div className=\"group-buttons\">\r\n              <button \r\n                onClick={() => setActiveChart('bpd_mm')} \r\n                className={`btn-tertiary ${activeChart === 'bpd_mm' ? 'active' : ''}`}\r\n              >\r\n                BPD\r\n              </button>\r\n              <button \r\n                onClick={() => setActiveChart('hc_mm')} \r\n                className={`btn-tertiary ${activeChart === 'hc_mm' ? 'active' : ''}`}\r\n              >\r\n                HC\r\n              </button>\r\n              <button \r\n                onClick={() => setActiveChart('ac_mm')} \r\n                className={`btn-tertiary ${activeChart === 'ac_mm' ? 'active' : ''}`}\r\n              >\r\n                AC\r\n              </button>\r\n              <button \r\n                onClick={() => setActiveChart('fl_mm')} \r\n                className={`btn-tertiary ${activeChart === 'fl_mm' ? 'active' : ''}`}\r\n              >\r\n                FL\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <GrowthChart \r\n          measurements={measurements} \r\n          parameter={activeChart} \r\n          officialMeasurement={officialMeasurement} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrowthJourneyView;"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","getOrCreateTooltip","chart","tooltipEl","tooltipBody","getCssVar","name","GrowthChart","measurements","parameter","officialMeasurement","t","useTranslation","chartData","useMemo","percentileData","CRL_PERCENTILES","FL_PERCENTILES","BPD_PERCENTILES","HC_PERCENTILES","AC_PERCENTILES","reDatedUserData","currentMeasurement","reDatedGestationalAgeInDays","officialAgeInDays","dateOfOfficialScan","dateOfCurrentScan","dayDifference","differenceInDays","value","p","allAgesInWeeks","d","minWeek","maxWeek","percentileCurve","percentileIndex","data","week","accentColor","secondaryAccentColor","chartOptions","context","tooltip","dataPoint","measurement","day","innerHtml","positionX","positionY","jsx","Line","GrowthChart$1","React","GrowthJourneyView","activeChart","setActiveChart","useState","jsxs","NavLink"],"mappings":"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"}